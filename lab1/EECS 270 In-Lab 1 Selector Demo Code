// Top-Level design module

module Mux (a, b, sel, f);
input a, b, sel;
output f;
assign f = sel & a | ~sel & b;
endmodule

module Selector(SW, KEY, LEDR, HEX0);
	input [16:0] SW;
	input [3:3] KEY;
	output [6:0] LEDR;
	output [6:0] HEX0;

Mux mux1 (SW[0], SW[10], ~KEY[3], LEDR[0]);
Mux mux2 (SW[1], SW[11], ~KEY[3], LEDR[1]);
Mux mux3 (SW[2], SW[12], ~KEY[3], LEDR[2]);
Mux mux4 (SW[3], SW[13], ~KEY[3], LEDR[3]);
Mux mux5 (SW[4], SW[14], ~KEY[3], LEDR[4]);
Mux mux6 (SW[5], SW[15], ~KEY[3], LEDR[5]);
Mux mux7 (SW[6], SW[16], ~KEY[3], LEDR[6]);

assign HEX0[0] = ~LEDR[0];
assign HEX0[1] = ~LEDR[1];
assign HEX0[2] = ~LEDR[2];
assign HEX0[3] = ~LEDR[3];
assign HEX0[4] = ~LEDR[4];
assign HEX0[5] = ~LEDR[5];
assign HEX0[6] = ~LEDR[6];


	//Array A(.a(SW[16]), .b(KEY[3]), .c(LEDR[6]), .m(HEX0[6]));

endmodule
